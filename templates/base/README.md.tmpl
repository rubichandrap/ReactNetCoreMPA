# {{PROJECT_NAME}}

A modern **Multi-Page Application (MPA)** built with **React 19** and **.NET Core 8**.

## 🚀 Quick Start

### Prerequisites
- **Node.js** 18+ 
- **.NET 8 SDK**
- **npm** or **yarn**

### Setup
```bash
# 1. Restore .NET dependencies
cd {{SERVER_NAME}}
dotnet restore

# 2. Install React dependencies
cd ../{{CLIENT_DIR}}
npm install
```

### Development
```bash
# Terminal 1: Start React dev server (hot reload)
cd {{CLIENT_DIR}}
npm run dev

# Terminal 2: Start .NET server
cd {{SERVER_NAME}}
dotnet run
```

Visit: `http://localhost:5104`

### Production Build
```bash
# 1. Build React app
cd {{CLIENT_DIR}}
npm run build

# 2. Build .NET app
cd ../{{SERVER_NAME}}
dotnet publish -c Release -o ./publish
```

### Docker
```bash
# Build and run with Docker Compose
docker-compose up --build
```

## 📁 Project Structure

```
{{PROJECT_NAME}}/
├── {{SERVER_NAME}}/              # .NET Core Backend
│   ├── Controllers/              # MVC Controllers
│   ├── Views/                    # Razor Views (React root divs)
│   └── wwwroot/                  # Static files
└── {{CLIENT_DIR}}/               # React Frontend
    ├── src/
    │   ├── pages/                # React pages
    │   ├── App.tsx               # Router
    │   └── main.tsx              # Entry point
    └── package.json
```

## 🛠️ Available Scripts

### React Client
- `npm run dev` - Start development server
- `npm run build` - Build for production
- `npm run preview` - Preview production build

### .NET Server
- `dotnet run` - Start development server
- `dotnet build` - Build project
- `dotnet publish` - Publish for production

## 🔧 Configuration

### Development Settings
- **React**: Vite dev server on port 5173
- **.NET**: ASP.NET Core on port 5104
- **Hot Reload**: Enabled for React development

### Production Settings
- **Static Files**: Served from `wwwroot/generated/`
- **Asset Manifest**: Auto-generated by `build-manifest.js`
- **Docker**: Multi-stage build with nginx

## 📦 Dependencies

### React Client
- React 19
- TypeScript
- Vite
- Tailwind CSS (if enabled)

### .NET Server
- ASP.NET Core 8
- MVC
- Razor Runtime Compilation

## 🚀 Deployment

### Docker
```bash
docker-compose up --build
```

### Manual
```bash
# Build everything
cd {{CLIENT_DIR}} && npm run build
cd ../{{SERVER_NAME}} && dotnet publish -c Release
```

## 📝 Notes

- This is a **React-first MPA** - each page is a complete React component
- CSHTML files only contain `<div id="react-root"></div>`
- Assets are automatically copied to `wwwroot/generated/` by the build process
- The `_ReactAssets.cshtml` file is auto-generated with the correct asset paths

## 🆘 Troubleshooting

### Common Issues
- **Port conflicts**: Check if ports 5104/5173 are in use
- **Build errors**: Run `dotnet clean` and `npm install` again
- **Asset loading**: Ensure `build-manifest.js` ran successfully

### Getting Help
- Check the console for error messages
- Verify all dependencies are installed
- Ensure Node.js and .NET versions are compatible
