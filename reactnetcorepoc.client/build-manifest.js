import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// Read the built index.html to extract asset names
const indexPath = path.join(__dirname, 'dist', 'index.html');
const indexContent = fs.readFileSync(indexPath, 'utf8');

// Extract JS and CSS file names using regex
const jsMatch = indexContent.match(/src="([^"]*\.js)"/);
const cssMatch = indexContent.match(/href="([^"]*\.css)"/);

const manifest = {
  js: jsMatch ? jsMatch[1] : null,
  css: cssMatch ? cssMatch[1] : null
};

// Create generated assets folder and clean it
const generatedAssetsPath = path.join(__dirname, '..', 'ReactNetCorePOC.Server', 'wwwroot', 'generated');
if (fs.existsSync(generatedAssetsPath)) {
  fs.rmSync(generatedAssetsPath, { recursive: true, force: true });
}
fs.mkdirSync(generatedAssetsPath, { recursive: true });

// Copy ALL dist files to wwwroot
const distPath = path.join(__dirname, 'dist');
const wwwrootPath = path.join(__dirname, '..', 'ReactNetCorePOC.Server', 'wwwroot');

// Copy index.html to wwwroot root
const indexSrc = path.join(distPath, 'index.html');
const indexDest = path.join(wwwrootPath, 'index.html');
if (fs.existsSync(indexSrc)) {
  fs.copyFileSync(indexSrc, indexDest);
  console.log('✅ Copied index.html to wwwroot');
}

// Copy assets to generated folder
const distAssetsPath = path.join(distPath, 'generated');
if (fs.existsSync(distAssetsPath)) {
  const files = fs.readdirSync(distAssetsPath);
  files.forEach(file => {
    fs.copyFileSync(
      path.join(distAssetsPath, file),
      path.join(generatedAssetsPath, file)
    );
  });
  console.log(`✅ Copied ${files.length} assets to wwwroot/generated`);
}

// Update manifest paths to use generated folder
const updatedManifest = {
  js: manifest.js ? manifest.js.replace('/assets/', '/generated/') : null,
  css: manifest.css ? manifest.css.replace('/assets/', '/generated/') : null
};

// Write manifest to server wwwroot
const manifestPath = path.join(__dirname, '..', 'ReactNetCorePOC.Server', 'wwwroot', 'manifest.json');
fs.writeFileSync(manifestPath, JSON.stringify(updatedManifest, null, 2));

// Generate _ReactAssets.cshtml file
const scriptsPath = path.join(__dirname, '..', 'ReactNetCorePOC.Server', 'Views', 'Shared', '_ReactAssets.cshtml');
const scriptsContent = `@*
    This file is automatically generated - DO NOT EDIT
    Generated by React build process
*@

<script type="module" crossorigin src="${updatedManifest.js}"></script>
<link rel="stylesheet" crossorigin href="${updatedManifest.css}">`;

fs.writeFileSync(scriptsPath, scriptsContent);

console.log('Build manifest generated:', manifest);
console.log('_ReactAssets.cshtml generated with assets:', manifest.js, manifest.css);
